#!/bin/bash

# Check for configuration directory

if [ ! -d /config ]; then
	mkdir -p /config
fi

# Check for motion.conf config file
if [ ! -f /config/motion.conf ]; then
	cp /usr/local/etc/motion/motion-dist.conf /config/motion.conf
fi

# Check for the motioneye config file
if [ ! -f /config/motioneye.conf ]; then
	cp /usr/local/share/motioneye/extra/motioneye.conf.sample /config/motioneye.conf
fi

if [ ! -d /home/nobody/motioneye/conf ]; then
	mkdir -p /home/nobody/motioneye/{conf,log,run,media}
	chown -R nobody:users /home/nobody
	chmod -R 775 /home/nobody
	sed -i '/conf_path.*/c\conf_path /config' /config/motioneye.conf
	sed -i '/log_path.*/c\log_path /home/nobody/motioneye/log' /config/motioneye.conf
	sed -i '/run_path.*/c\run_path /home/nobody/motioneye/run' /config/motioneye.conf
	sed -i '/media_path.*/c\media_path /home/nobody/motioneye/media' /config/motioneye.conf
	ln -sf /config/motion.conf /home/nobody/motioneye/conf/motion.conf
	ln -sf /config/motioneye.conf /home/nobody/motioneye/conf/motioneye.conf
fi

# Set permissions on the config directory
chown -R nobody:users /config
chmod -R 775 /config

# Check e-mail setting
if [ -z "${MAILTO}" ]; then
    echo "The \$MAILTO environment variable is not set, skip e-mail notification."
fi

# Set the correct timezone
if [ -n "${TIMEZONE}" ]; then
    cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime
fi

# Override capture size for Motion
if [ -n "${MOTION_PIXELS}" ]; then
    echo "Set capture size to ${MOTION_PIXELS}"
    IFS='x' read -a wxh<<< "${MOTION_PIXELS}"
    WIDTH=${wxh[0]}
    HEIGHT=${wxh[1]}
    sed -i "s/^width\s[0-9]\+/width ${WIDTH}/g" /config/motion.conf
    sed -i "s/^height\s[0-9]\+/height ${HEIGHT}/g" /config/motion.conf
fi

# Override threshold, event_gap for Motion
[ -n "${MOTION_THRESHOLD}" ] && \
    sed -i "s/^threshold\s[0-9]\+/threshold ${MOTION_THRESHOLD}/g" /etc/motion/motion.conf
[ -n "${MOTION_EVENT_GAP}" ] && \
    sed -i "s/^event_gap\s[0-9]\+/event_gap ${MOTION_EVENT_GAP}/g" /etc/motion/motion.conf

# Timelapse mode
if [ -n "${MOTION_TIMELAPSE}" ]; then
    IFS=',' read -a timelapse<<< "${MOTION_TIMELAPSE}"
    interval=${timelapse[0]}
    duration=${timelapse[1]}
    ofile="/tmp/timelapse-start-time.log"
    # Record the time-lapse start time
    echo $(date +"%s") > ${ofile}
    # Send the timer to background
    /usr/local/bin/timelapse.sh ${ofile} ${interval} ${duration} &
    # Settings for running Motion on time-lapse mode
    sed -i "s/^threshold\s[0-9]\+/threshold 0/g" /config/motion.conf
    sed -i "s/^ffmpeg_output_movies off/ffmpeg_output_movies on/g" /config/motion.conf
    sed -i "s/^ffmpeg_timelapse\s[0-9]\+/ffmpeg_timelapse ${interval}/g" /config/motion.conf
fi

# Set the sender's name in notify email
echo 'set realname="Motion Detector"' > /root/.muttrc

# Run motion
/usr/bin/supervisord -c /etc/supervisor/supervisord.conf
